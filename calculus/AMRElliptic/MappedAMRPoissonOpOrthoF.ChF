c*******************************************************************************
c  SOMAR - Stratified Ocean Model with Adaptive Refinement
c  Copyright (C) 2014 Edward Santilli & Alberto Scotti
c
c  This library is free software; you can redistribute it and/or
c  modify it under the terms of the GNU Lesser General Public
c  License as published by the Free Software Foundation; either
c  version 2.1 of the License, or (at your option) any later version.
c
c  This library is distributed in the hope that it will be useful,
c  but WITHOUT ANY WARRANTY; without even the implied warranty of
c  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
c  Lesser General Public License for more details.
c
c  You should have received a copy of the GNU Lesser General Public
c  License along with this library; if not, write to the Free Software
c  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301
c  USA
c
c  For up-to-date contact information, please visit the repository homepage,
c  https://github.com/somarhub.
c*******************************************************************************
#include "CONSTANTS.H"
#include "AddlFortranMacros.H"


C     -----------------------------------------------------------------
C     MAPPEDGETFLUXORTHO
C     Computes the fluxes at faces between valid cells of phi.
C       flux^a = J g^{a a} D_a[phi]
C     ------------------------------------------------------------------
      subroutine MAPPEDGETFLUXORTHO (
     &    CHF_FRA[flux],
     &    CHF_CONST_FRA[phi],
     &    CHF_CONST_FRA1[Jgaa],
     &    CHF_BOX[FCRegion],
     &    CHF_CONST_REAL[beta_dx],
     &    CHF_CONST_INT[adir])

      INTEGER ncomp, n
      integer CHF_DDECL[i ; j ; k ]
      integer CHF_DDECL[ai; aj; ak]

      CHF_DTERM[
      ai = CHF_ID(adir, 0);
      aj = CHF_ID(adir, 1);
      ak = CHF_ID(adir, 2)]

      ncomp = CHF_NCOMP[flux]

#ifndef NDEBUG
      ! Check comps
      if(ncomp .ne. CHF_NCOMP[phi]) then
         print*, 'MAPPEDGETFLUXORTHO: flux and phi incompatible'
         call MAYDAYERROR()
      endif

      ! Check data regions
      if (.not. CHECK_CONTAINS(flux,0,0,0, FCRegion,0,0,0)) then
        print*, 'MAPPEDGETFLUXORTHO: flux does not contain FCRegion'
        call MAYDAYERROR()
      endif

      ! phi is not currently tested!

      ! Since Jgaa and FCRegion are both FC, this hack should work...
      if (.not. CHECK_CONTAINS(Jgaa,0,0,0, FCRegion,0,0,0)) then
        print*, 'MAPPEDGETFLUXORTHO: Jgaa does not contain FCRegion'
        call MAYDAYERROR()
      endif
#endif

      do n = 0, ncomp-1
          flux(CHF_IX[iFCRegionlo0   :iFCRegionhi0   ; iFCRegionlo1   :iFCRegionhi1   ; iFCRegionlo2   :iFCRegionhi2   ], n)
     &  = Jgaa(CHF_IX[iFCRegionlo0   :iFCRegionhi0   ; iFCRegionlo1   :iFCRegionhi1   ; iFCRegionlo2   :iFCRegionhi2   ]   ) * beta_dx
     &  * (phi(CHF_IX[iFCRegionlo0   :iFCRegionhi0   ; iFCRegionlo1   :iFCRegionhi1   ; iFCRegionlo2   :iFCRegionhi2   ], n)
     &  -  phi(CHF_IX[iFCRegionlo0-ai:iFCRegionhi0-ai; iFCRegionlo1-aj:iFCRegionhi1-aj; iFCRegionlo2-ak:iFCRegionhi2-ak], n))
      enddo

      return
      end
